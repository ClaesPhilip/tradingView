[{"D:\\KYH PLUGG\\Folders\\tradingview\\src\\index.tsx":"1","D:\\KYH PLUGG\\Folders\\tradingview\\src\\reportWebVitals.ts":"2","D:\\KYH PLUGG\\Folders\\tradingview\\src\\firebase\\config.ts":"3","D:\\KYH PLUGG\\Folders\\tradingview\\src\\App.tsx":"4","D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\index.ts":"5","D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\actions\\authActions.ts":"6","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\sections\\Header.tsx":"7","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\ForgotPassword.tsx":"8","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\SignIn.tsx":"9","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\test.tsx":"10","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\Homepage.tsx":"11","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\auth\\PublicRoute.tsx":"12","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\SignUp.tsx":"13","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Loader.tsx":"14","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\Dashboard.tsx":"15","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\auth\\PrivateRoute.tsx":"16","D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\reducers\\authReducer.ts":"17","D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\types.ts":"18","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Button.tsx":"19","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Message.tsx":"20","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Input.tsx":"21","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\crypto\\crypto.tsx":"22","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\crypto\\CryptoDetail.tsx":"23","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\news\\News.tsx":"24"},{"size":680,"mtime":1609673192246,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1609673192248,"results":"27","hashOfConfig":"26"},{"size":561,"mtime":1609673192245,"results":"28","hashOfConfig":"26"},{"size":2464,"mtime":1610395774665,"results":"29","hashOfConfig":"26"},{"size":470,"mtime":1609862967068,"results":"30","hashOfConfig":"26"},{"size":3706,"mtime":1609673192249,"results":"31","hashOfConfig":"26"},{"size":1335,"mtime":1609673192245,"results":"32","hashOfConfig":"26"},{"size":1964,"mtime":1609673192242,"results":"33","hashOfConfig":"26"},{"size":2075,"mtime":1609673192243,"results":"34","hashOfConfig":"26"},{"size":386,"mtime":1609673192244,"results":"35","hashOfConfig":"26"},{"size":527,"mtime":1609673192243,"results":"36","hashOfConfig":"26"},{"size":569,"mtime":1609673192242,"results":"37","hashOfConfig":"26"},{"size":2255,"mtime":1609673192244,"results":"38","hashOfConfig":"26"},{"size":198,"mtime":1609673192240,"results":"39","hashOfConfig":"26"},{"size":2272,"mtime":1610385492292,"results":"40","hashOfConfig":"26"},{"size":567,"mtime":1609673192241,"results":"41","hashOfConfig":"26"},{"size":1081,"mtime":1609673192250,"results":"42","hashOfConfig":"26"},{"size":1427,"mtime":1609862967068,"results":"43","hashOfConfig":"26"},{"size":413,"mtime":1609673192240,"results":"44","hashOfConfig":"26"},{"size":480,"mtime":1609673192241,"results":"45","hashOfConfig":"26"},{"size":690,"mtime":1609673192240,"results":"46","hashOfConfig":"26"},{"size":4122,"mtime":1610384585323,"results":"47","hashOfConfig":"26"},{"size":1573,"mtime":1610384565300,"results":"48","hashOfConfig":"26"},{"size":1280,"mtime":1610395990620,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1p6cw5l",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\KYH PLUGG\\Folders\\tradingview\\src\\index.tsx",[],["103","104"],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\reportWebVitals.ts",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\firebase\\config.ts",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\App.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\index.ts",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\actions\\authActions.ts",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\sections\\Header.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\ForgotPassword.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\SignIn.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\test.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\Homepage.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\auth\\PublicRoute.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\SignUp.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Loader.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\pages\\Dashboard.tsx",["105"],"import React, { FC, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Message from '../UI/Message';\r\nimport { setSuccess } from '../../store/actions/authActions';\r\nimport { RootState } from '../../store';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../css/Dashboard.css';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { user, needVerification, success } = useSelector((state: RootState) => state.auth);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    if(success) {\r\n      dispatch(setSuccess(''));\r\n    }\r\n  }, [success, dispatch]);\r\n\r\n  return (\r\n    <div className='dashboard-home'>\r\n    {needVerification && <Message type=\"success\" msg=\"Please verify your email address.\" />}\r\n      <h1 className=\"is-size-1\">Welcome {user?.firstName}</h1>\r\n        <Link to='/test'>TEST ME</Link>\r\n\r\n        <Link to=\"/crypto\">Cryptocurrency</Link>\r\n\r\n        <Link to=\"/news\">News</Link>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const options: any = {\r\n//   method: 'GET',\r\n//   url: 'https://coingecko.p.rapidapi.com/coins/markets',\r\n//   params: {vs_currency: 'usd', page: '1', per_page: '100', order: 'market_cap_desc'},\r\n//   headers: {\r\n//     'x-rapidapi-key': '3ac8d4ae88msh5e51fe37d8246cbp1d1d55jsnaf860dc19453',\r\n//     'x-rapidapi-host': 'coingecko.p.rapidapi.com'\r\n//   }\r\n// };\r\n\r\n// axios.request(options).then(function (response) {\r\n// \tconsole.log(response.data);\r\n// }).catch(function (error) {\r\n// \tconsole.error(error);\r\n// });\r\n\r\n// const Dashboard: FC = () => {\r\n//   const { user, needVerification, success } = useSelector((state: RootState) => state.auth);\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     if(success) {\r\n//       dispatch(setSuccess(''));\r\n//     }\r\n//   }, [success, dispatch]);\r\n\r\n\r\n//   return(\r\n//     <section className=\"section\">\r\n//       <div className=\"container\">\r\n//         {needVerification && <Message type=\"success\" msg=\"Please verify your email address.\" />}\r\n//         <h1 className=\"is-size-1\">Welcome {user?.firstName}</h1>\r\n//         <Link to='/test'>TEST ME</Link>\r\n        \r\n//       </div>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\auth\\PrivateRoute.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\reducers\\authReducer.ts",["106"],"import { AuthAction, AuthState, SET_USER, SET_LOADING, SIGN_OUT, SET_ERROR, NEED_VERIFICATION, SET_SUCCESS } from '../types';\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  authenticated: false,\r\n  loading: false,\r\n  error: '',\r\n  needVerification: false,\r\n  success: ''\r\n}\r\n\r\nexport default (state = initialState, action: AuthAction) => {\r\n  switch(action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        authenticated: true\r\n      }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        authenticated: false,\r\n        loading: false\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    case NEED_VERIFICATION:\r\n      return {\r\n        ...state,\r\n        needVerification: true\r\n      }\r\n    case SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: action.payload\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}","D:\\KYH PLUGG\\Folders\\tradingview\\src\\store\\types.ts",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Button.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Message.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\UI\\Input.tsx",[],"D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\crypto\\crypto.tsx",["107","108","109"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Crypto.css';\r\n\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport interface ICrypto {\r\n  userId: number;\r\n  id: string;\r\n  name: string;\r\n  market_cap: number;\r\n  current_price: number;\r\n  image: string;\r\n  total_volume: number;\r\n  symbol: string;\r\n  price_change_percentage_24h: number;\r\n  price_change_percentage_7d_in_currency: string;\r\n}\r\n\r\nconst defaultProps:ICrypto[] = [];\r\n\r\nconst Cryptocurrency: React.FC = () => {\r\n  const [cryptos, setCryptos]: [ICrypto[], (posts: ICrypto[]) => void] = React.useState(defaultProps);\r\n  const [loading, setLoading]: [boolean, (loading: boolean) => void] = React.useState<boolean>(true);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState(\"\");\r\n  const [search, setSearch]: [string, (search: string) => void] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get<ICrypto[]>(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=sek&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=7d\")\r\n      .then(response => {\r\n        setCryptos(response.data);\r\n        setLoading(false);\r\n        console.log(response.data);\r\n      }).catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n      maxWidth: 1300,\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      marginTop: \"30px\",\r\n      marginBottom: \"30px\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n  <div className=\"japp\">\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n            <p className=\"crypto-matches\">100 matches</p>\r\n            <input className=\"\" placeholder='Search' type=\"text\" value={search} onChange={(e) => setSearch(e.target.value)}></input>\r\n          <TableRow>\r\n            <TableCell>Coin</TableCell>\r\n            <TableCell>Cymbol</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Volume</TableCell>\r\n            <TableCell align=\"right\">Market cap</TableCell>\r\n            <TableCell align=\"right\">24h</TableCell>\r\n            <TableCell align=\"right\">7d</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {cryptos.map((cryptos) => {\r\n            if (search === \"\" || cryptos.name.toLowerCase().includes(search.toLowerCase())) {\r\n              return (\r\n            <TableRow key={cryptos.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <img src={cryptos.image} alt=\"image\" />\r\n                <Link to={`/crypto/${cryptos.id}`}>{cryptos.name.toLocaleUpperCase()}</Link>\r\n              </TableCell>\r\n              <TableCell align=\"right\">{cryptos.symbol.toLocaleUpperCase()}</TableCell>\r\n              <TableCell align=\"right\">{cryptos.current_price} SEK</TableCell>\r\n              <TableCell align=\"right\">{cryptos.total_volume} SEK</TableCell>\r\n              <TableCell align=\"right\">{cryptos.market_cap} SEK</TableCell>\r\n              <TableCell align=\"right\">{cryptos.price_change_percentage_24h} %</TableCell>\r\n              <TableCell align=\"right\">{cryptos.price_change_percentage_7d_in_currency} %</TableCell>\r\n            </TableRow>\r\n          )}})}\r\n        </TableBody>\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </Table>\r\n    </TableContainer>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Cryptocurrency;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\crypto\\CryptoDetail.tsx",["110","111","112"],"import React from 'react';\r\n\r\nimport './Crypto.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport interface ICrypto {\r\n  userId: number;\r\n  id: string;\r\n  name: string;\r\n  market_cap: number;\r\n  current_price: number;\r\n  image: string;\r\n  total_volume: number;\r\n  symbol: string;\r\n  price_change_percentage_24h: number;\r\n  price_change_percentage_7d_in_currency: string;\r\n}\r\n\r\nconst defaultProps:ICrypto[] = [];\r\n\r\nconst CryptoDetail: React.FC = () => {\r\n  const [crypto, setCrypto]: [ICrypto[], (posts: ICrypto[]) => void] = React.useState(defaultProps);\r\n  const [loading, setLoading]: [boolean, (loading: boolean) => void] = React.useState<boolean>(true);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get<ICrypto[]>(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=sek&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=7d\")\r\n      .then(response => {\r\n        setCrypto(response.data);\r\n        setLoading(false);\r\n        console.log(response.data);\r\n      }).catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n        setError(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\nreturn (\r\n    <div>\r\n        {crypto.map((crypto) => {\r\n        return (\r\n            <div key={crypto.id}>\r\n                <img src={crypto.image} alt=\"image\" />\r\n            </div>\r\n        )})}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CryptoDetail;","D:\\KYH PLUGG\\Folders\\tradingview\\src\\components\\news\\News.tsx",["113","114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":12,"column":1,"nodeType":"127","endLine":50,"endColumn":2},{"ruleId":"121","severity":1,"message":"128","line":33,"column":10,"nodeType":"123","messageId":"124","endLine":33,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":85,"column":34,"nodeType":"131","messageId":"132","endLine":85,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":90,"column":17,"nodeType":"135","endLine":90,"endColumn":56},{"ruleId":"121","severity":1,"message":"128","line":24,"column":10,"nodeType":"123","messageId":"124","endLine":24,"endColumn":17},{"ruleId":"121","severity":1,"message":"136","line":25,"column":10,"nodeType":"123","messageId":"124","endLine":25,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":49,"column":17,"nodeType":"135","endLine":49,"endColumn":55},{"ruleId":"121","severity":1,"message":"137","line":23,"column":16,"nodeType":"123","messageId":"124","endLine":23,"endColumn":23},{"ruleId":"121","severity":1,"message":"138","line":24,"column":17,"nodeType":"123","messageId":"124","endLine":24,"endColumn":25},{"ruleId":"121","severity":1,"message":"139","line":25,"column":10,"nodeType":"123","messageId":"124","endLine":25,"endColumn":16},{"ruleId":"121","severity":1,"message":"140","line":25,"column":18,"nodeType":"123","messageId":"124","endLine":25,"endColumn":27},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'error' is assigned a value but never used.","'setNews' is assigned a value but never used.","'setError' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]